{"version":3,"sources":["features/authen/actions/index.js","components/validateForm/validates.js","features/authen/components/login/index.jsx","components/validateForm/index.jsx"],"names":["login","data","type","LOGIN","payload","updateInputData","form","key","value","UPDATEINPUT","updateGoogleLoginData","GOOGLE_LOGIN","validateEmail","validateObj","isValidated","message","validatePassword","validates","FEATURE_AUTH","FORM_REGISTER","email","password","FORM_LOGIN","WithValidateTextField","WrappedField","formInfo","formDataPath","feature","validateFunctions","validatesConfig","validatedDataPath","WithValidateFieldComponent","props","formData","useFirstUpdate","onChange","validatedName","validatedData","updateValidateData","nestedProps","error","firstUpdated","onBlur","e","validated","Object","keys","forEach","includes","target","validateFunction","mapState","state","Util","get","mapAction","connect","withValidateField","TextField","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","width","submit","withValidateForm","WrappedForm","WithValidateFormComponent","isFormValidated","inputData","authData","classes","text","googleLogin","forgot","history","useEffect","role","window","location","replace","submitLogin","useCallback","event","preventDefault","onChangeEmail","currentTarget","onChangePassword","onGGLoginSuccess","googleUser","googleProfile","getBasicProfile","profile","fullName","getName","getEmail","image","getImageUrl","googleId","getId","firstName","getFamilyName","lastName","getGivenName","token","getAuthResponse","id_token","onGGLoginFailure","Container","component","maxWidth","CssBaseline","className","Avatar","LockOutlined","Typography","variant","noValidate","autoComplete","required","fullWidth","id","label","name","autoFocus","defaultValue","Button","onClick","color","Grid","container","item","xs","clientId","onSuccess","onFailure","cookiePolicy"],"mappings":"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","file":"static/js/14.3d3b3b1e.chunk.js","sourcesContent":["import {\n  LOGIN,\n  SIGNUP,\n  UPDATEINPUT,\n  GOOGLE_LOGIN,\n  GETAUTH\n} from './types'\n\nexport const login = (data) => {\n  return {\n    type: LOGIN,\n    payload: data\n  }\n}\n\nexport const register = (data) => {\n  return {\n    type: SIGNUP,\n    payload: data\n  }\n}\n\nexport const updateInputData = (form, key, value) => {\n  return {\n    type: UPDATEINPUT,\n    payload: { form, key, value }\n  }\n}\n\nexport const updateGoogleLoginData = (data) => {\n  return {\n    type: GOOGLE_LOGIN,\n    payload: data,\n  }\n}\n\n\nexport const getAuth = (token) => {\n  return {\n    type: GETAUTH,\n    payload: token,\n  }\n}\n\n","import {\n  FORM_REGISTER,\n  FORM_LOGIN,\n  FEATURE_AUTH\n} from 'root/actions/types'\n\nconst validateEmail = (value) => {\n  let validateObj = {\n    isValidated: true,\n  }\n  if (!value) {\n    validateObj = {\n      isValidated: false,\n      message: 'empty user name'\n    }\n  }\n  return validateObj\n}\n\nconst validatePassword = (value) => {\n  let validateObj = {\n    isValidated: true,\n  }\n  if (!value) {\n    validateObj = {\n      isValidated: false,\n      message: 'empty password'\n    }\n  }\n  return validateObj\n}\n\nconst validateText = (key) => {\n  return (value) => {\n    let validateObj = {\n      isValidated: true,\n    }\n    if (!value) {\n      validateObj = {\n        isValidated: false,\n        message: `empty ${key}`\n      }\n    }\n    return validateObj\n  }\n}\n\nconst validates = {\n  [FEATURE_AUTH]: {\n    [FORM_REGISTER]: {\n      email: validateEmail,\n      password: validatePassword\n    },\n    [FORM_LOGIN]: {\n      email: validateEmail,\n      password: validatePassword\n    }\n  }\n}\n\nexport default validates","import React, { useCallback, useEffect } from 'react'\nimport Util from 'root/utils'\nimport { connect } from 'react-redux'\nimport {\n  Avatar,\n  Button,\n  CssBaseline,\n  TextField,\n  Grid,\n  Typography,\n  Container,\n  Link\n} from '@material-ui/core'\nimport {\n  FORM_LOGIN,\n  FEATURE_AUTH\n} from './../../actions/types'\nimport {\n  updateInputData,\n  login,\n  updateGoogleLoginData\n} from './../../actions'\nimport { withValidateForm, withValidateField } from 'root/components/validateForm'\nimport { LockOutlined as LockOutlinedIcon } from '@material-ui/icons'\nimport { makeStyles } from '@material-ui/core/styles'\nimport GoogleLogin from 'react-google-login'\n\nconst WithValidateTextField = withValidateField(TextField, { feature: FEATURE_AUTH, form: FORM_LOGIN })\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}))\n\n\nconst LoginComponent = (props) => {\n  const classes = useStyles()\n  const { text = {\n    googleLogin: 'Sign in with Google',\n    login: 'Login',\n    email: 'Email Address',\n    password: 'Password',\n    forgot: 'Forgot password?',\n  }\n    , updateGoogleLoginData\n    , login, updateInputData, inputData = {}\n    , isFormValidated, authData, history } = props\n  const { email, password } = inputData\n\n  useEffect(() => {\n    if(authData && (authData.role || '').includes('admin')) {\n      window.location.replace('/admin')\n    }\n  }, [authData])\n\n  const submitLogin = useCallback((event) => {\n    event.preventDefault()\n    typeof login === 'function' && login({ email, password })\n  }, [login, inputData])\n\n  const onChangeEmail = useCallback((e) => {\n    typeof updateInputData === 'function' && updateInputData(FORM_LOGIN, 'email', e?.currentTarget?.value)\n  }, [updateInputData])\n\n  const onChangePassword = useCallback((e) => {\n    typeof updateInputData === 'function' && updateInputData(FORM_LOGIN, 'password', e?.currentTarget?.value)\n  }, [updateInputData])\n\n  const onGGLoginSuccess = useCallback((googleUser) => {\n    const googleProfile = googleUser.getBasicProfile()\n    const profile = {\n      fullName: googleProfile.getName(),\n      email: googleProfile.getEmail(),\n      image: googleProfile.getImageUrl(),\n      googleId: googleProfile.getId(),\n      firstName: googleProfile.getFamilyName(),\n      lastName: googleProfile.getGivenName(),\n      token: googleUser.getAuthResponse().id_token\n    }\n    updateGoogleLoginData(profile)\n  }, [updateGoogleLoginData])\n\n  const onGGLoginFailure = useCallback((googleUser) => {\n  }, [])\n\n  return (\n    <Container component='main' maxWidth='xs'>\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component='h1' variant='h5'>\n          {text.login}\n        </Typography>\n        <form className={classes.form} noValidate={false} autoComplete='off'>\n          <WithValidateTextField\n            useFirstUpdate\n            validatedName='email'\n            variant='outlined'\n            margin='normal'\n            required\n            fullWidth\n            id='email'\n            label={text.email}\n            name='email'\n            autoFocus\n            autoComplete={'true'}\n            onChange={onChangeEmail}\n            defaultValue={email}\n          />\n          <WithValidateTextField\n            useFirstUpdate\n            validatedName='password'\n            variant='outlined'\n            margin='normal'\n            required\n            fullWidth\n            name='password'\n            label={text.password}\n            type='password'\n            id='password'\n            onChange={onChangePassword}\n            autoComplete={'true'}\n            defaultValue={password}\n          />\n          <Button\n            onClick={submitLogin}\n            fullWidth\n            variant='contained'\n            color='primary'\n            className={classes.submit}\n            // disabled={!isFormValidated}\n          >\n            {text.login}\n          </Button>\n          {/* <Grid container>\n            <Grid item xs>\n              <Link href='/forgetPassword'>\n                {text.forgot}\n              </Link>\n            </Grid>\n          </Grid> */}\n          <Grid container>\n            <Grid item xs></Grid>\n            <Grid item>\n              <GoogleLogin\n                clientId='404281480421-lbrm3qknrffqpndu06u4925047tt4ee3.apps.googleusercontent.com'\n                // buttonText={text.googleLogin}\n                onSuccess={onGGLoginSuccess}\n                onFailure={onGGLoginFailure}\n                cookiePolicy={'single_host_origin'}\n                className='loginBtn loginBtn--google'\n              />\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  )\n}\n\nconst mapState = (state) => ({\n  inputData: Util.get(state, `${FEATURE_AUTH}.${FORM_LOGIN}.data`),\n  authData: Util.get(state, `${FEATURE_AUTH}.auth`)\n})\n\nconst mapDispatch = () => {\n  return ({\n    updateInputData,\n    login,\n    updateGoogleLoginData\n  })\n}\n\nexport default withValidateForm(connect(mapState, mapDispatch())(LoginComponent), {\n  feature: FEATURE_AUTH,\n  form: FORM_LOGIN,\n  useFirstUpdate: true\n})","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { updateValidateData } from 'root/actions/validates'\nimport Util from 'root/utils'\nimport validatesConfig from './validates'\n\nexport const withValidateField = (WrappedField, formInfo = {}) => {\n  const formDataPath = `${formInfo.feature}.${formInfo.form}.data`\n  const validateFunctions = validatesConfig[formInfo.feature][formInfo.form]\n  const validatedDataPath = `${formInfo.feature}.${formInfo.form}.validatedData`\n\n  const WithValidateFieldComponent = (props) => {\n    const { formData = {}\n      , useFirstUpdate\n      , onChange\n      , validatedName\n      , validatedData = {}\n      , updateValidateData\n      , ...nestedProps\n    } = props\n\n    const onChangeWithValidate = (e, data) => {\n      const value = e?.target?.value || ''\n      if (!validatedData.firstUpdated && useFirstUpdate) {\n        updateValidateData && typeof updateValidateData == 'function' \n        && updateValidateData(formInfo.form, 'firstUpdated', true)\n      }\n      const validateFunction = validateFunctions[validatedName] || (() => {})\n      updateValidateData && typeof updateValidateData == 'function' \n      && updateValidateData(formInfo.form, validatedName, validateFunction(value))\n      onChange && typeof onChange === 'function' && onChange(e, data)\n    }\n\n    const onReleaseField = (e) => {\n      let validated = true\n      Object.keys(validatedData).forEach((key) => {\n        if (typeof validatedData[key] === 'object'\n        && Object.keys(validatedData[key]).includes('isValidated')\n        && !validatedData[key].isValidated\n        ) {\n          validated = false\n        }\n      })\n      updateValidateData && typeof updateValidateData == 'function' && updateValidateData(formInfo.form, 'isFormValidated', validated)\n    }\n    return <WrappedField\n      {...nestedProps}\n      error={!validatedData[validatedName]?.isValidated && validatedData.firstUpdated}\n      onBlur={onReleaseField}\n      onChange={onChangeWithValidate}\n    />\n  }\n\n  const mapState = (state) => {\n    return ({\n      formData: Util.get(state, formDataPath),\n      validatedData: Util.get(state, validatedDataPath),\n    })\n  }\n  const mapAction = {\n    updateValidateData\n  }\n  return connect(mapState, mapAction)(WithValidateFieldComponent)\n}\n\nexport const withValidateForm = (WrappedForm, formInfo = {}) => {\n  const formDataPath = `${formInfo.feature}.${formInfo.form}.data`\n  const validatedDataPath = `${formInfo.feature}.${formInfo.form}.validatedData`\n\n  const WithValidateFormComponent = (props) => {\n    const { validatedData = {}\n      , ...nestedProps\n    } = props\n    const { isFormValidated, firstUpdated } = validatedData\n    return <WrappedForm\n      isFormValidated={isFormValidated && (formInfo.useFirstUpdate ? firstUpdated : true)}\n      {...nestedProps}\n    />\n  }\n\n  const mapState = (state) => ({\n    formData: Util.get(state, formDataPath),\n    validatedData: Util.get(state, validatedDataPath),\n  })\n  const mapAction = {\n\n  }\n  return connect(mapState, mapAction)(WithValidateFormComponent)\n}"],"sourceRoot":""}