{"version":3,"sources":["features/showRoom/components/showRoom/searchInput.jsx","features/showRoom/components/showRoom/mediaCard.jsx","features/showRoom/components/showRoom/index.jsx","features/showRoom/actions/index.js"],"names":["text","keyBoard","SearchInput","props","getNovals","searchInputRef","handleBlurSearchText","useCallback","e","data","searchText","current","state","value","limit","page","handleKeyDown","key","width","label","ref","onBlur","onKeyDown","MediaCard","handleClickCard","window","open","url","inset","style","position","height","cursor","rounded","display","justifyContent","backgroundColor","marginTop","textAlign","fontSize","fontWeight","title","color","name","dark","src","imageUrl","background","paddingBottom","shortDescription","bottom","float","marginBottom","onClick","variant","mapProps","type","GET_NOVALS","payload","connect","utils","get","SHOW_ROOM_REDUCER","novals","test","useRef","useEffect","popular","overrideThemeVariables","Grid","container","spacing","item","xs","alignItems","alignContent","map","noval","index","id"],"mappings":"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","file":"static/js/13.61d9e7a3.chunk.js","sourcesContent":["import React, { useCallback, useRef, useState } from 'react'\nimport { TextField, Typography } from 'ui-neumorphism'\n\nconst text = {\n  search: 'Truyện bạn cần tìm...'\n}\n\nconst keyBoard = {\n  ENTER: 'Enter'\n}\n\nconst SearchInput = (props) => {\n  \n  const { getNovals, searchInputRef } = props\n\n  const handleBlurSearchText = useCallback((e, data) => {\n    getNovals({ searchText: searchInputRef.current.state.value, limit: 24, page: 1 })\n  }, [getNovals])\n\n  const handleKeyDown = useCallback((e) => {\n    if (e.key === keyBoard.ENTER) {\n      getNovals({ searchText: searchInputRef.current.state.value, limit: 24, page: 1  })\n    }\n  }, [getNovals])\n  \n  return (\n    <>\n      <TextField width={400} label={text.search}\n        ref={searchInputRef} onBlur={handleBlurSearchText}\n        onKeyDown={handleKeyDown}  \n      />\n    </>\n  )\n}\n\nexport default SearchInput","import React, { useCallback } from 'react'\nimport { Card, CardMedia, CardContent,\n  Button,\n  Body2, CardAction, CardHeader, Typography\n} from 'ui-neumorphism'\nimport 'ui-neumorphism/dist/index.css'\n\nconst text = {\n  read: 'Đọc truyện...'\n}\n\nconst MediaCard = (props) => {\n\n  const { data } = props\n\n  const handleClickCard = useCallback(() => {\n    window.open(data.url, '_blank')\n  }, [data.url])\n\n  return (\n    <Card inset style={{ position: 'relative', height: '100%', cursor: 'pointer' }} rounded>\n      <CardHeader\n        style={{ display: 'flex', justifyContent: 'center', backgroundColor: 'transparent', marginTop: '1em', textAlign: 'center', fontSize: '16px', fontWeight: 600 }}\n        title={<Typography style={{marginTop: '1em', color: 'steelblue'}} textAlign='center'>{data.name}</Typography>}\n      />\n      <CardMedia\n        dark\n        src={data.imageUrl}\n        style={{ background: `url(${data.imageUrl}) no-repeat center` }}\n        // title={data.imageAltName}\n      />\n      <CardContent style={{ paddingBottom: '3em' }} >\n        <Body2>\n          {data.shortDescription}...\n        </Body2>\n      </CardContent>\n      <CardAction style={{ background: 'orange', position: 'absolute', bottom: '1em' , width: '100%', justifyContent: 'center' }}>\n        <Button style={{ background: 'steelblue', float: 'right', marginBottom: 0 }}\n          onClick={handleClickCard}><Typography textAlign={'center'} style={{ color: 'white' }} variant={'b1'}>{text.read}</Typography></Button>\n      </CardAction>\n    </Card>\n  )\n}\n\nexport default MediaCard","import React, { useCallback, useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport utils from 'root/utils';\nimport { SHOW_ROOM_REDUCER } from 'root/actions/types';\nimport { getNovals } from '../../actions'\nimport 'ui-neumorphism/dist/index.css'\nimport { Grid } from '@material-ui/core'\nimport { overrideThemeVariables } from 'ui-neumorphism'\nimport SearchInput from './searchInput'\nimport MediaCard from './mediaCard'\nimport './body.css'\n\nconst ShowRoom = (props) => {\n\n  const { getNovals, novals = [{ test: 'test' }] } = props\n  const searchInputRef = useRef(null)\n  useEffect(() => {\n    getNovals({ popular: true, limit: 24 })\n  }, [getNovals])\n\n  useEffect(() => {\n    overrideThemeVariables({\n      '--light-bg': '#b9d7d2',\n      '--light-bg-dark-shadow': '#c8e7e3',\n      '--light-bg-light-shadow': '#a0bab6'\n    })\n  }, [])\n\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12} style={{ display: 'flex', alignItems: 'center', alignContent: 'center', justifyContent: 'center' }}>\n        <SearchInput searchInputRef={searchInputRef} getNovals={getNovals} />\n      </Grid>\n      <Grid item xs={12} style={{ display: 'flex', alignItems: 'center', alignContent: 'center', justifyContent: 'center' }}>\n        <Grid container spacing={2}>\n          {novals.map((noval, index) => (<Grid key={`noval-${noval.id}-${noval.name}-${index}`} item xs={2}>\n            <MediaCard data={noval} />\n          </Grid>))\n          }\n        </Grid>\n      </Grid>\n    </Grid>\n  )\n}\n\nconst mapState = (state) => ({ ...utils.get(state, SHOW_ROOM_REDUCER) })\n\nconst mapProps = {\n  getNovals,\n}\n\nexport default connect(mapState, mapProps)(ShowRoom)","import {\n  GET_NOVALS,\n} from './types'\n\n\nexport const getNovals = (data) => {\n  return {\n    type: GET_NOVALS,\n    payload: data\n  }\n}\n"],"sourceRoot":""}